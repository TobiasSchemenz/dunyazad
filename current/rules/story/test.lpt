% vim: syn=gringo
% setup:
% ------

max_unique(0).
story_root(root).
story_node(root).
node_status_reached(root, uninitialized).
path_length(root, 0).
node_type(root, choice).

story_op(root, initialize_node).
story_op(root, build_options).
story_op(root, add_branch_nodes).
story_op(root, add_surface).

:- not setup(root, on_sale).
%:- not st(root, relation(has_item, inst(actor, member_1), inst(item, Instrument).
st(root, property(has_skill, inst(actor, member_1), music)).
:- not at(root, action(option(1), trade)).
:- not at(root, outcome(option(1), o(deal, deal))).
%:- not at(root, action(option(2), flee)).
%:- not at(root, initiator(option(1), inst(actor, member_1))).

%:- not successor(root, option(1), root_1).
%story_op(root_1, initialize_node).
%story_op(root_1, build_options).
%story_op(root_1, add_branch_nodes).

%:- not successor(root, option(2), root_2).
%story_op(root_2, initialize_node).
%story_op(root_2, build_options).

%:- not setup(root, on_sale).
%:- not setup("root_1", roc_attack).
%:- not resolves_vignette(root, option(1)).
%:- not node_type(root_1_1, choice).
%:- error(m("Reached destination before end of story", N, X)).
%:- 0 = { resolves_vignette(N, option(O)) : at(N, option(O)) }.
%:- 0 = { at(N, action(X, pacify)) : at(N, action(X, A)) }.
